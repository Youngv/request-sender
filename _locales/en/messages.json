{
    "appName": {
        "message": "Request Sender",
        "description": "Name of the application"
    },
    "appDesc": {
        "message": "A tool to manage and send HTTP requests",
        "description": "Description of the application"
    },
    "myRequests": {
        "message": "My Requests",
        "description": "My Requests tab"
    },
    "createRequest": {
        "message": "Create Request",
        "description": "Create Request tab"
    },
    "requestLogs": {
        "message": "Request Logs",
        "description": "Request Logs tab"
    },
    "noRequests": {
        "message": "No requests yet. Click \"Create Request\" to add one.",
        "description": "Message when no requests exist"
    },
    "name": {
        "message": "Name",
        "description": "Request name field"
    },
    "url": {
        "message": "URL",
        "description": "Request URL field"
    },
    "method": {
        "message": "HTTP Method",
        "description": "HTTP method field"
    },
    "contentType": {
        "message": "Content Type",
        "description": "Content type field"
    },
    "headers": {
        "message": "Headers (JSON format)",
        "description": "Headers field"
    },
    "headersExample": {
        "message": "Use valid JSON format, e.g.: {\"key\": \"value\", \"key2\": \"value2\"}",
        "description": "Headers example help"
    },
    "body": {
        "message": "Request Body",
        "description": "Request body field"
    },
    "bodyJsonHelp": {
        "message": "When content type is JSON, ensure you use valid JSON format",
        "description": "JSON body help"
    },
    "bodyExample": {
        "message": "Example: {\"user\": {\"name\": \"John\", \"age\": 30}}",
        "description": "Body example"
    },
    "dynamicFields": {
        "message": "Dynamic Fields",
        "description": "Dynamic fields title"
    },
    "dynamicFieldsHelp": {
        "message": "The system will automatically detect placeholders in the format {{field_name}} in the URL, headers, or body, and prompt you to fill in specific values when sending.",
        "description": "Dynamic fields help"
    },
    "dynamicFieldsExample": {
        "message": "Example: {\"user_id\": \"{{user_id}}\"} or https://api.example.com/users/{{user_id}}",
        "description": "Dynamic fields example"
    },
    "save": {
        "message": "Save",
        "description": "Save button"
    },
    "test": {
        "message": "Test",
        "description": "Test button"
    },
    "refresh": {
        "message": "Refresh",
        "description": "Refresh button"
    },
    "clearLogs": {
        "message": "Clear Logs",
        "description": "Clear logs button"
    },
    "noLogs": {
        "message": "No request logs",
        "description": "Message when no logs exist"
    },
    "loadingLogs": {
        "message": "Loading logs...",
        "description": "Loading logs message"
    },
    "fillParameters": {
        "message": "Fill Parameter Values",
        "description": "Parameter modal title"
    },
    "paramDescription": {
        "message": "This request contains parameters that need values. Please provide values for the following parameters:",
        "description": "Parameter modal description"
    },
    "send": {
        "message": "Send",
        "description": "Send button"
    },
    "cancel": {
        "message": "Cancel",
        "description": "Cancel button"
    },
    "edit": {
        "message": "Edit",
        "description": "Edit button"
    },
    "delete": {
        "message": "Delete",
        "description": "Delete button"
    },
    "confirmDelete": {
        "message": "Are you sure you want to delete this request?",
        "description": "Delete confirmation message"
    },
    "requestDeleted": {
        "message": "Request deleted",
        "description": "Request deletion success message"
    },
    "confirmClearLogs": {
        "message": "Are you sure you want to clear all request logs?",
        "description": "Clear logs confirmation message"
    },
    "jsonError": {
        "message": "JSON Format Error",
        "description": "JSON error message"
    },
    "jsonErrorDetails": {
        "message": "Please check your JSON syntax and ensure:<br>- All keys use double quotes \"<br>- No trailing commas<br>- Properly matched brackets<br>- Values use correct format",
        "description": "JSON error details"
    },
    "savedSuccess": {
        "message": "Saved successfully",
        "description": "Save success message"
    },
    "sendSuccess": {
        "message": "Sent successfully",
        "description": "Send success message"
    },
    "sendFailed": {
        "message": "Send failed",
        "description": "Send failure message"
    },
    "logsCleared": {
        "message": "Logs cleared",
        "description": "Logs cleared message"
    },
    "required": {
        "message": "is required",
        "description": "Required field message"
    },
    "noBodyNeeded": {
        "message": "Request body not needed",
        "description": "Message indicating some HTTP methods don't need a request body"
    },
    "viewDetails": {
        "message": "View Details",
        "description": "Button to view log details"
    },
    "hideDetails": {
        "message": "Hide Details",
        "description": "Button to hide log details"
    },
    "status": {
        "message": "Status",
        "description": "Status label for response"
    },
    "success": {
        "message": "Success",
        "description": "Success status message"
    },
    "failure": {
        "message": "Failure",
        "description": "Failure status message"
    },
    "unknownError": {
        "message": "Unknown Error",
        "description": "Unknown error message"
    },
    "enterValue": {
        "message": "Enter value for {0}",
        "description": "Placeholder for parameter input"
    },
    "unknownMethod": {
        "message": "UNKNOWN",
        "description": "Label for unknown HTTP method"
    },
    "noDynamicFields": {
        "message": "No dynamic fields found in this request.",
        "description": "Message shown when no dynamic fields are found"
    },
    "dynamicFieldsTitle": {
        "message": "The system will detect placeholders in the following format:",
        "description": "Dynamic fields explanation title"
    },
    "dynamicFieldsDesc": {
        "message": "These placeholders can appear in URL, headers, or request body. You will be prompted to fill in specific values when sending.",
        "description": "Dynamic fields functionality description"
    },
    "dynamicFieldsExampleTitle": {
        "message": "Example:",
        "description": "Dynamic fields example title"
    },
    "editRequest": {
        "message": "Edit Request",
        "description": "Edit Request title"
    },
    "sendingRequest": {
        "message": "Sending Request",
        "description": "Message shown while sending request"
    },
    "requestSent": {
        "message": "Request sent",
        "description": "Message shown after request is sent"
    },
    "requestUpdated": {
        "message": "Request updated",
        "description": "Request update success message"
    },
    "request": {
        "message": "Request",
        "description": "Request information title"
    },
    "response": {
        "message": "Response",
        "description": "Response information title"
    },
    "requestHeaders": {
        "message": "Request Headers (JSON format):",
        "description": "Request headers format description"
    },
    "responseHeaders": {
        "message": "Response Headers:",
        "description": "Response headers title"
    },
    "networkError": {
        "message": "Network Error",
        "description": "Network error status description"
    },
    "ok": {
        "message": "OK",
        "description": "200 status code description"
    },
    "created": {
        "message": "Created",
        "description": "201 status code description"
    },
    "accepted": {
        "message": "Accepted",
        "description": "202 status code description"
    },
    "noContent": {
        "message": "No Content",
        "description": "204 status code description"
    },
    "badRequest": {
        "message": "Bad Request",
        "description": "400 status code description"
    },
    "unauthorized": {
        "message": "Unauthorized",
        "description": "401 status code description"
    },
    "forbidden": {
        "message": "Forbidden",
        "description": "403 status code description"
    },
    "notFound": {
        "message": "Not Found",
        "description": "404 status code description"
    },
    "methodNotAllowed": {
        "message": "Method Not Allowed",
        "description": "405 status code description"
    },
    "requestTimeout": {
        "message": "Request Timeout",
        "description": "408 status code description"
    },
    "conflict": {
        "message": "Conflict",
        "description": "409 status code description"
    },
    "unprocessableEntity": {
        "message": "Unprocessable Entity",
        "description": "422 status code description"
    },
    "tooManyRequests": {
        "message": "Too Many Requests",
        "description": "429 status code description"
    },
    "internalServerError": {
        "message": "Internal Server Error",
        "description": "500 status code description"
    },
    "badGateway": {
        "message": "Bad Gateway",
        "description": "502 status code description"
    },
    "serviceUnavailable": {
        "message": "Service Unavailable",
        "description": "503 status code description"
    },
    "gatewayTimeout": {
        "message": "Gateway Timeout",
        "description": "504 status code description"
    },
    "contextMenuTitle": {
        "message": "Send to Request",
        "description": "Context menu root item text"
    },
    "selectedText": {
        "message": "Selected Text",
        "description": "Label for selected text"
    },
    "sendToRequest": {
        "message": "Send to {0}",
        "description": "Context menu item text for specific request"
    },
    "requests": {
        "message": "Requests",
        "description": "Plural form of request"
    },
    "requestSentSuccess": {
        "message": "Request Sent Successfully",
        "description": "Title for notification when request is sent successfully"
    },
    "requestSentFailed": {
        "message": "Request Failed",
        "description": "Title for notification when request fails"
    },
    "requestSentError": {
        "message": "Request Error",
        "description": "Title for notification when there's an error sending the request"
    },
    "requestNotFound": {
        "message": "Request not found",
        "description": "Error message when a request is not found"
    },
    "invalidRequest": {
        "message": "Invalid request configuration",
        "description": "Error message for invalid request configuration"
    },
    "requestExists": {
        "message": "A request with this name already exists",
        "description": "Error message when trying to create a request with a name that already exists"
    },
    "requestAdded": {
        "message": "Request added successfully",
        "description": "Message shown after a new request is added"
    }
}
